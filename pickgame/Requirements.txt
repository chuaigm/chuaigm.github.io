
实现一个html网页，不使用node.js 只用前端实现，也不使用上传文件的方式，网页加载时，
首先读取当前 index.html 目录下，game_list 文件夹中的所有 txt 文件，每一个txt文件代表一个游戏平台，要读取的文件，会在代码中写明，有：
atari7800.txt cps3.txt psvita.txt segacd.txt
txt 文件名就是游戏平台名，每个txt文件中每一行是一个游戏名和这个游戏所占用的空间，单位是KB，格式例如：

jojo	( 77658 KB)
jojoba	( 71776 KB)
redearth	( 48010 KB)
sfiii	( 40875 KB)
sfiii2	( 45288 KB)
sfiii3	( 79548 KB)


当加载完所有的文档后，在页面左侧，创建一个可以伸缩的子页面，当点击屏幕左侧的伸缩按钮时，此页面可以拉开或者缩回，当页面拉开时，以方块图标的形式显示游戏平台，
图标使用当前路径下 plat_pic 文件夹下，与 游戏平台txt文件同名的jpg文件作为图标显示，当左侧页面拉开时，方块图标以最多三列，剩下排列多行的形式显示
当点击某个游戏平台图标时，左侧页面自动缩回，主页面显示所选游戏平台下的所有游戏，显示内容就以该平台txt每一行数据内容，每个游戏前都有一个checkbox，可供点击选择或者不选，
内存中需要记录每一个平台被选择的内容，当点击平台图标切换时，需要记录每个平台下已经选择的情况，被选择的游戏，内存中需要记录该平台已选择游戏所占空间总量大小
计算方法为统计每个被选中的行中，括号中，KB前的数字，将他们相加，再转换为 GB单位

页面最上方，有一个固定不动的部分，这个固定的部分，不能遮挡左侧可弹出的页面，当下面的页面的游戏列表太长滚动时，页面最上方的部分保持不动，这里显示几个按钮：
全(不)选按钮，这个按钮点击一下，会选择当前页面内的所有游戏的checkbox都选中，再次点击则都取消选中
导出按钮，点击导出按钮，则将所有游戏平台，选择的行，先以txt文本格式存在内存中，然后将所有平台的这些txt，打包成zip格式，弹出下载，下载文件默认以game_list_前缀 + 当前日期命名

在页面上方固定不动的区域中，以较大字体显示两个静态文本，第一个静态文本，表示当前页面所显示平台，已选择的游戏所占用空间大小，已GB单位显示，
第二个文本，为当前所选的所有平台，已选择的游戏，空间占用总数


